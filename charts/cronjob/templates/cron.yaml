apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ .Release.Name }}
  labels:
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    heritage: {{ .Release.Service }}
    type: {{ .Chart.Name }}
    app: {{ .Release.Name }}
    {{- if .Values.metadata.labels.datadog.env }}
    tags.datadoghq.com/env: {{ .Values.metadata.labels.datadog.env }}
    {{- end }}
    {{- if .Values.metadata.labels.datadog.service }}
    tags.datadoghq.com/service: {{ .Values.metadata.labels.datadog.service }}
    {{- end }}
    {{- if .Values.metadata.labels.datadog.version }}
    tags.datadoghq.com/version: {{ .Values.metadata.labels.datadog.version }}
    {{- end }}
spec:
  schedule: {{ .Values.cronjob.schedule }}
  suspend: {{ .Values.cronjob.suspend }}
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            type: {{ .Chart.Name }}
            app: {{ .Release.Name }}
            {{- if .Values.metadata.labels.datadog.env }}
            tags.datadoghq.com/env: {{ .Values.metadata.labels.datadog.env }}
            {{- end }}
            {{- if .Values.metadata.labels.datadog.service }}
            tags.datadoghq.com/service: {{ .Values.metadata.labels.datadog.service }}
            {{- end }}
            {{- if .Values.metadata.labels.datadog.version }}
            tags.datadoghq.com/version: {{ .Values.metadata.labels.datadog.version }}
            {{- end }}
        spec:
          {{- if .Values.aws_iam_role_arn }}
          serviceAccountName: {{ .Release.Name }}
          securityContext:
            fsGroup: 65534 # To be able to read Kubernetes and AWS token files
          {{- end }}
          containers:
            - name: {{ .Release.Name }}
              image: "{{ .Values.image_repo }}:{{ .Values.image_tag }}"
              imagePullPolicy: {{ .Values.image_pull_policy }}
              {{- if .Values.command }}
              command:
                {{- .Values.command | toYaml | nindent 16 }}
              {{- end }}
              {{- if .Values.args }}
              args:
                {{- .Values.args | toYaml | nindent 16 }}
              {{- end }}
              env:
                - name: PORT
                  value: {{ .Values.port | quote }}
                {{- if .Values.metadata.labels.datadog.env }}
                - name: DD_ENV
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.labels['tags.datadoghq.com/env']
                {{- end }}
                {{- if .Values.metadata.labels.datadog.service }}
                - name: DD_SERVICE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.labels['tags.datadoghq.com/service']
                {{- end }}
                {{- if .Values.metadata.labels.datadog.version }}
                - name: DD_VERSION
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.labels['tags.datadoghq.com/version']
                {{- end }}
              {{- if .Values.env }}
              {{- range $key, $val := .Values.env }}
                - name: {{ $key }}
                  value: {{ $val | quote }}
              {{- end }}
              {{- end }}
              ports:
                - name: http
                  containerPort: {{ .Values.port }}
                  protocol: TCP
              resources:
                {{- toYaml .Values.resources | nindent 16 }}
          restartPolicy: {{ .Values.restartPolicy }}
          {{- with .Values.nodeSelector }}
          nodeSelector:
            {{- toYaml . | nindent 12 }}
          {{- end }}
        {{- with .Values.affinity }}
          affinity:
            {{- toYaml . | nindent 12 }}
        {{- end }}
        {{- with .Values.tolerations }}
          tolerations:
            {{- toYaml . | nindent 12 }}
        {{- end }}
