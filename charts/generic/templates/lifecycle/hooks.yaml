{{- if .Values.hooks.enabled }}

{{/* Pre-install hooks */}}
{{- range $hook := .Values.hooks.preInstall }}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ printf "%s-pre-install-%s" (include "generic.fullname" $) $hook.name }}
  namespace: {{ include "generic.namespace" $ }}
  labels:
    {{- include "generic.labels" $ | nindent 4 }}
    app.kubernetes.io/component: hook
    app.kubernetes.io/hook-type: pre-install
    {{- with $hook.labels }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
  annotations:
    "helm.sh/hook": pre-install
    "helm.sh/hook-weight": {{ $hook.weight | default 1 | quote }}
    "helm.sh/hook-delete-policy": {{ $hook.deletePolicy | default "before-hook-creation" }}
    {{- with $hook.annotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
spec:
  {{- with $hook.ttlSecondsAfterFinished }}
  ttlSecondsAfterFinished: {{ . }}
  {{- end }}
  {{- with $hook.backoffLimit }}
  backoffLimit: {{ . }}
  {{- end }}
  template:
    metadata:
      labels:
        {{- include "generic.selectorLabels" $ | nindent 8 }}
        app.kubernetes.io/component: hook
        app.kubernetes.io/hook-type: pre-install
      annotations:
        {{- include "generic.podAnnotations" $ | nindent 8 }}
    spec:
      restartPolicy: {{ $hook.restartPolicy | default "Never" }}
      {{- with $hook.imagePullSecrets | default $.Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if $.Values.serviceAccount.enabled }}
      serviceAccountName: {{ include "generic.serviceAccountName" $ }}
      {{- else if $.Values.serviceAccount.name }}
      serviceAccountName: {{ $.Values.serviceAccount.name }}
      {{- end }}
      securityContext:
        {{- include "generic.podSecurityContext" (dict "securityContext" $.Values.podSecurityContext "defaults" $.Values.podSecurityContextDefaults) | nindent 8 }}
      containers:
      - name: {{ $hook.name }}
        image: {{ $hook.image }}
        imagePullPolicy: {{ $hook.imagePullPolicy | default $.Values.image.pullPolicy | default "IfNotPresent" }}
        {{- with $hook.command }}
        command:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- with $hook.args }}
        args:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- with $hook.env }}
        env:
          {{- include "generic.envVars" (dict "envVars" . "root" $) | nindent 10 }}
        {{- end }}
        {{- with $hook.envFrom }}
        envFrom:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- with $hook.resources }}
        resources:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- with $hook.volumeMounts }}
        volumeMounts:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        securityContext:
          {{- include "generic.containerSecurityContext" (dict "securityContext" $hook.securityContext "root" $) | nindent 10 }}
      {{- with $hook.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}

{{/* Post-install hooks */}}
{{- range $hook := .Values.hooks.postInstall }}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ printf "%s-post-install-%s" (include "generic.fullname" $) $hook.name }}
  namespace: {{ include "generic.namespace" $ }}
  labels:
    {{- include "generic.labels" $ | nindent 4 }}
    app.kubernetes.io/component: hook
    app.kubernetes.io/hook-type: post-install
    {{- with $hook.labels }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
  annotations:
    "helm.sh/hook": post-install
    "helm.sh/hook-weight": {{ $hook.weight | default 1 | quote }}
    "helm.sh/hook-delete-policy": {{ $hook.deletePolicy | default "hook-succeeded" }}
    {{- with $hook.annotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
spec:
  {{- with $hook.ttlSecondsAfterFinished }}
  ttlSecondsAfterFinished: {{ . }}
  {{- end }}
  {{- with $hook.backoffLimit }}
  backoffLimit: {{ . }}
  {{- end }}
  template:
    metadata:
      labels:
        {{- include "generic.selectorLabels" $ | nindent 8 }}
        app.kubernetes.io/component: hook
        app.kubernetes.io/hook-type: post-install
      annotations:
        {{- include "generic.podAnnotations" $ | nindent 8 }}
    spec:
      restartPolicy: {{ $hook.restartPolicy | default "Never" }}
      {{- with $hook.imagePullSecrets | default $.Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if $.Values.serviceAccount.enabled }}
      serviceAccountName: {{ include "generic.serviceAccountName" $ }}
      {{- else if $.Values.serviceAccount.name }}
      serviceAccountName: {{ $.Values.serviceAccount.name }}
      {{- end }}
      securityContext:
        {{- include "generic.podSecurityContext" (dict "securityContext" $.Values.podSecurityContext "defaults" $.Values.podSecurityContextDefaults) | nindent 8 }}
      containers:
      - name: {{ $hook.name }}
        image: {{ $hook.image }}
        imagePullPolicy: {{ $hook.imagePullPolicy | default $.Values.image.pullPolicy | default "IfNotPresent" }}
        {{- with $hook.command }}
        command:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- with $hook.args }}
        args:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- with $hook.env }}
        env:
          {{- include "generic.envVars" (dict "envVars" . "root" $) | nindent 10 }}
        {{- end }}
        {{- with $hook.envFrom }}
        envFrom:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- with $hook.resources }}
        resources:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- with $hook.volumeMounts }}
        volumeMounts:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        securityContext:
          {{- include "generic.containerSecurityContext" (dict "securityContext" $hook.securityContext "root" $) | nindent 10 }}
      {{- with $hook.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}

{{/* Pre-upgrade hooks */}}
{{- range $hook := .Values.hooks.preUpgrade }}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ printf "%s-pre-upgrade-%s" (include "generic.fullname" $) $hook.name }}
  namespace: {{ include "generic.namespace" $ }}
  labels:
    {{- include "generic.labels" $ | nindent 4 }}
    app.kubernetes.io/component: hook
    app.kubernetes.io/hook-type: pre-upgrade
    {{- with $hook.labels }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
  annotations:
    "helm.sh/hook": pre-upgrade
    "helm.sh/hook-weight": {{ $hook.weight | default 1 | quote }}
    "helm.sh/hook-delete-policy": {{ $hook.deletePolicy | default "before-hook-creation" }}
    {{- with $hook.annotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
spec:
  {{- with $hook.ttlSecondsAfterFinished }}
  ttlSecondsAfterFinished: {{ . }}
  {{- end }}
  {{- with $hook.backoffLimit }}
  backoffLimit: {{ . }}
  {{- end }}
  template:
    metadata:
      labels:
        {{- include "generic.selectorLabels" $ | nindent 8 }}
        app.kubernetes.io/component: hook
        app.kubernetes.io/hook-type: pre-upgrade
      annotations:
        {{- include "generic.podAnnotations" $ | nindent 8 }}
    spec:
      restartPolicy: {{ $hook.restartPolicy | default "Never" }}
      {{- with $hook.imagePullSecrets | default $.Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if $.Values.serviceAccount.enabled }}
      serviceAccountName: {{ include "generic.serviceAccountName" $ }}
      {{- else if $.Values.serviceAccount.name }}
      serviceAccountName: {{ $.Values.serviceAccount.name }}
      {{- end }}
      securityContext:
        {{- include "generic.podSecurityContext" (dict "securityContext" $.Values.podSecurityContext "defaults" $.Values.podSecurityContextDefaults) | nindent 8 }}
      containers:
      - name: {{ $hook.name }}
        image: {{ $hook.image }}
        imagePullPolicy: {{ $hook.imagePullPolicy | default $.Values.image.pullPolicy | default "IfNotPresent" }}
        {{- with $hook.command }}
        command:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- with $hook.args }}
        args:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- with $hook.env }}
        env:
          {{- include "generic.envVars" (dict "envVars" . "root" $) | nindent 10 }}
        {{- end }}
        {{- with $hook.envFrom }}
        envFrom:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- with $hook.resources }}
        resources:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- with $hook.volumeMounts }}
        volumeMounts:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        securityContext:
          {{- include "generic.containerSecurityContext" (dict "securityContext" $hook.securityContext "root" $) | nindent 10 }}
      {{- with $hook.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}

{{/* Post-upgrade hooks */}}
{{- range $hook := .Values.hooks.postUpgrade }}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ printf "%s-post-upgrade-%s" (include "generic.fullname" $) $hook.name }}
  namespace: {{ include "generic.namespace" $ }}
  labels:
    {{- include "generic.labels" $ | nindent 4 }}
    app.kubernetes.io/component: hook
    app.kubernetes.io/hook-type: post-upgrade
    {{- with $hook.labels }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
  annotations:
    "helm.sh/hook": post-upgrade
    "helm.sh/hook-weight": {{ $hook.weight | default 1 | quote }}
    "helm.sh/hook-delete-policy": {{ $hook.deletePolicy | default "hook-succeeded" }}
    {{- with $hook.annotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
spec:
  {{- with $hook.ttlSecondsAfterFinished }}
  ttlSecondsAfterFinished: {{ . }}
  {{- end }}
  {{- with $hook.backoffLimit }}
  backoffLimit: {{ . }}
  {{- end }}
  template:
    metadata:
      labels:
        {{- include "generic.selectorLabels" $ | nindent 8 }}
        app.kubernetes.io/component: hook
        app.kubernetes.io/hook-type: post-upgrade
      annotations:
        {{- include "generic.podAnnotations" $ | nindent 8 }}
    spec:
      restartPolicy: {{ $hook.restartPolicy | default "Never" }}
      {{- with $hook.imagePullSecrets | default $.Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if $.Values.serviceAccount.enabled }}
      serviceAccountName: {{ include "generic.serviceAccountName" $ }}
      {{- else if $.Values.serviceAccount.name }}
      serviceAccountName: {{ $.Values.serviceAccount.name }}
      {{- end }}
      securityContext:
        {{- include "generic.podSecurityContext" (dict "securityContext" $.Values.podSecurityContext "defaults" $.Values.podSecurityContextDefaults) | nindent 8 }}
      containers:
      - name: {{ $hook.name }}
        image: {{ $hook.image }}
        imagePullPolicy: {{ $hook.imagePullPolicy | default $.Values.image.pullPolicy | default "IfNotPresent" }}
        {{- with $hook.command }}
        command:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- with $hook.args }}
        args:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- with $hook.env }}
        env:
          {{- include "generic.envVars" (dict "envVars" . "root" $) | nindent 10 }}
        {{- end }}
        {{- with $hook.envFrom }}
        envFrom:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- with $hook.resources }}
        resources:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- with $hook.volumeMounts }}
        volumeMounts:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        securityContext:
          {{- include "generic.containerSecurityContext" (dict "securityContext" $hook.securityContext "root" $) | nindent 10 }}
      {{- with $hook.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}

{{/* Pre-delete hooks */}}
{{- range $hook := .Values.hooks.preDelete }}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ printf "%s-pre-delete-%s" (include "generic.fullname" $) $hook.name }}
  namespace: {{ include "generic.namespace" $ }}
  labels:
    {{- include "generic.labels" $ | nindent 4 }}
    app.kubernetes.io/component: hook
    app.kubernetes.io/hook-type: pre-delete
    {{- with $hook.labels }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
  annotations:
    "helm.sh/hook": pre-delete
    "helm.sh/hook-weight": {{ $hook.weight | default 1 | quote }}
    "helm.sh/hook-delete-policy": {{ $hook.deletePolicy | default "hook-succeeded" }}
    {{- with $hook.annotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
spec:
  {{- with $hook.ttlSecondsAfterFinished }}
  ttlSecondsAfterFinished: {{ . }}
  {{- end }}
  {{- with $hook.backoffLimit }}
  backoffLimit: {{ . }}
  {{- end }}
  template:
    metadata:
      labels:
        {{- include "generic.selectorLabels" $ | nindent 8 }}
        app.kubernetes.io/component: hook
        app.kubernetes.io/hook-type: pre-delete
      annotations:
        {{- include "generic.podAnnotations" $ | nindent 8 }}
    spec:
      restartPolicy: {{ $hook.restartPolicy | default "Never" }}
      {{- with $hook.imagePullSecrets | default $.Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if $.Values.serviceAccount.enabled }}
      serviceAccountName: {{ include "generic.serviceAccountName" $ }}
      {{- else if $.Values.serviceAccount.name }}
      serviceAccountName: {{ $.Values.serviceAccount.name }}
      {{- end }}
      securityContext:
        {{- include "generic.podSecurityContext" (dict "securityContext" $.Values.podSecurityContext "defaults" $.Values.podSecurityContextDefaults) | nindent 8 }}
      containers:
      - name: {{ $hook.name }}
        image: {{ $hook.image }}
        imagePullPolicy: {{ $hook.imagePullPolicy | default $.Values.image.pullPolicy | default "IfNotPresent" }}
        {{- with $hook.command }}
        command:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- with $hook.args }}
        args:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- with $hook.env }}
        env:
          {{- include "generic.envVars" (dict "envVars" . "root" $) | nindent 10 }}
        {{- end }}
        {{- with $hook.envFrom }}
        envFrom:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- with $hook.resources }}
        resources:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- with $hook.volumeMounts }}
        volumeMounts:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        securityContext:
          {{- include "generic.containerSecurityContext" (dict "securityContext" $hook.securityContext "root" $) | nindent 10 }}
      {{- with $hook.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}

{{/* Post-delete hooks */}}
{{- range $hook := .Values.hooks.postDelete }}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ printf "%s-post-delete-%s" (include "generic.fullname" $) $hook.name }}
  namespace: {{ include "generic.namespace" $ }}
  labels:
    {{- include "generic.labels" $ | nindent 4 }}
    app.kubernetes.io/component: hook
    app.kubernetes.io/hook-type: post-delete
    {{- with $hook.labels }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
  annotations:
    "helm.sh/hook": post-delete
    "helm.sh/hook-weight": {{ $hook.weight | default 1 | quote }}
    "helm.sh/hook-delete-policy": {{ $hook.deletePolicy | default "hook-succeeded" }}
    {{- with $hook.annotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
spec:
  {{- with $hook.ttlSecondsAfterFinished }}
  ttlSecondsAfterFinished: {{ . }}
  {{- end }}
  {{- with $hook.backoffLimit }}
  backoffLimit: {{ . }}
  {{- end }}
  template:
    metadata:
      labels:
        {{- include "generic.selectorLabels" $ | nindent 8 }}
        app.kubernetes.io/component: hook
        app.kubernetes.io/hook-type: post-delete
      annotations:
        {{- include "generic.podAnnotations" $ | nindent 8 }}
    spec:
      restartPolicy: {{ $hook.restartPolicy | default "Never" }}
      {{- with $hook.imagePullSecrets | default $.Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if $.Values.serviceAccount.enabled }}
      serviceAccountName: {{ include "generic.serviceAccountName" $ }}
      {{- else if $.Values.serviceAccount.name }}
      serviceAccountName: {{ $.Values.serviceAccount.name }}
      {{- end }}
      securityContext:
        {{- include "generic.podSecurityContext" (dict "securityContext" $.Values.podSecurityContext "defaults" $.Values.podSecurityContextDefaults) | nindent 8 }}
      containers:
      - name: {{ $hook.name }}
        image: {{ $hook.image }}
        imagePullPolicy: {{ $hook.imagePullPolicy | default $.Values.image.pullPolicy | default "IfNotPresent" }}
        {{- with $hook.command }}
        command:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- with $hook.args }}
        args:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- with $hook.env }}
        env:
          {{- include "generic.envVars" (dict "envVars" . "root" $) | nindent 10 }}
        {{- end }}
        {{- with $hook.envFrom }}
        envFrom:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- with $hook.resources }}
        resources:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- with $hook.volumeMounts }}
        volumeMounts:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        securityContext:
          {{- include "generic.containerSecurityContext" (dict "securityContext" $hook.securityContext "root" $) | nindent 10 }}
      {{- with $hook.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}

{{- end }}
