suite: test cronjob
templates:
  - core/cronjob.yaml
tests:
  - it: should create cronjob when type is cronjob
    set:
      workload.type: cronjob
      workload.schedule: "*/5 * * * *"
    asserts:
      - isKind:
          of: CronJob
      - equal:
          path: metadata.name
          value: RELEASE-NAME
      - equal:
          path: spec.schedule
          value: "*/5 * * * *"

  - it: should set concurrency policy
    set:
      workload.type: cronjob
      workload.schedule: "0 * * * *"
      workload.concurrencyPolicy: Forbid
    asserts:
      - equal:
          path: spec.concurrencyPolicy
          value: Forbid

  - it: should set job history limits
    set:
      workload.type: cronjob
      workload.schedule: "0 * * * *"
      workload.successfulJobsHistoryLimit: 5
      workload.failedJobsHistoryLimit: 3
    asserts:
      - equal:
          path: spec.successfulJobsHistoryLimit
          value: 5
      - equal:
          path: spec.failedJobsHistoryLimit
          value: 3

  - it: should set starting deadline seconds
    set:
      workload.type: cronjob
      workload.schedule: "0 * * * *"
      workload.startingDeadlineSeconds: 300
    asserts:
      - equal:
          path: spec.startingDeadlineSeconds
          value: 300

  - it: should set job template spec
    set:
      workload.type: cronjob
      workload.schedule: "0 * * * *"
      workload.backoffLimit: 3
      workload.completions: 5
      workload.parallelism: 2
    asserts:
      - equal:
          path: spec.jobTemplate.spec.backoffLimit
          value: 3
      - equal:
          path: spec.jobTemplate.spec.completions
          value: 5
      - equal:
          path: spec.jobTemplate.spec.parallelism
          value: 2

  - it: should set ttl after finished
    set:
      workload.type: cronjob
      workload.schedule: "0 * * * *"
      workload.ttlSecondsAfterFinished: 600
    asserts:
      - equal:
          path: spec.jobTemplate.spec.ttlSecondsAfterFinished
          value: 600

  - it: should use OnFailure restart policy
    set:
      workload.type: cronjob
      workload.schedule: "0 * * * *"
    asserts:
      - equal:
          path: spec.jobTemplate.spec.template.spec.restartPolicy
          value: OnFailure

  - it: should set custom restart policy
    set:
      workload.type: cronjob
      workload.schedule: "0 * * * *"
      workload.restartPolicy: Never
    asserts:
      - equal:
          path: spec.jobTemplate.spec.template.spec.restartPolicy
          value: Never

  - it: should suspend cronjob
    set:
      workload.type: cronjob
      workload.schedule: "0 * * * *"
      workload.suspend: true
    asserts:
      - equal:
          path: spec.suspend
          value: true

  - it: should set timezone
    set:
      workload.type: cronjob
      workload.schedule: "0 * * * *"
      workload.timeZone: "America/New_York"
    asserts:
      - equal:
          path: spec.timeZone
          value: "America/New_York"

  - it: should validate schedule is required
    set:
      workload.type: cronjob
      workload.schedule: ""
    asserts:
      - failedTemplate: {}

  - it: should not create cronjob for other workload types
    set:
      workload.type: deployment
    asserts:
      - hasDocuments:
          count: 0
