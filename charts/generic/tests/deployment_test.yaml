suite: test deployment
templates:
  - deployment.yaml
tests:
  - it: should create deployment by default
    set:
      configMap.enabled: false
      secret.enabled: false
    asserts:
      - isKind:
          of: Deployment
      - equal:
          path: metadata.name
          value: RELEASE-NAME

  - it: should create deployment when enabled
    set:
      deployment.enabled: true
      configMap.enabled: false
      secret.enabled: false
    asserts:
      - isKind:
          of: Deployment
      - hasDocuments:
          count: 1

  - it: should not create deployment when disabled
    set:
      deployment.enabled: false
      configMap.enabled: false
      secret.enabled: false
    asserts:
      - hasDocuments:
          count: 0

  - it: should set replicas correctly
    set:
      configMap.enabled: false
      secret.enabled: false
      deployment.replicas: 3
    asserts:
      - equal:
          path: spec.replicas
          value: 3

  - it: should use deployment strategy
    set:
      configMap.enabled: false
      secret.enabled: false
      deployment.strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 1
          maxSurge: 2
    asserts:
      - equal:
          path: spec.strategy.type
          value: RollingUpdate
      - equal:
          path: spec.strategy.rollingUpdate.maxUnavailable
          value: 1
      - equal:
          path: spec.strategy.rollingUpdate.maxSurge
          value: 2

  - it: should include pod template labels
    set:
      configMap.enabled: false
      secret.enabled: false
    asserts:
      - exists:
          path: spec.template.metadata.labels
      - equal:
          path: spec.template.metadata.labels["app.kubernetes.io/name"]
          value: generic
      - equal:
          path: spec.template.metadata.labels["app.kubernetes.io/instance"]
          value: RELEASE-NAME


  - it: should set pod security context
    set:
      configMap.enabled: false
      secret.enabled: false
      podSecurityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
    asserts:
      - equal:
          path: spec.template.spec.securityContext.runAsUser
          value: 1000
      - equal:
          path: spec.template.spec.securityContext.runAsGroup
          value: 1000
      - equal:
          path: spec.template.spec.securityContext.fsGroup
          value: 1000

  - it: should add init containers
    set:
      configMap.enabled: false
      secret.enabled: false
      initContainers:
        - name: init-db
          image: busybox:latest
          command: ["sh", "-c", "echo initializing"]
    asserts:
      - equal:
          path: spec.template.spec.initContainers[0].name
          value: init-db
      - equal:
          path: spec.template.spec.initContainers[0].image
          value: busybox:latest
