suite: test gateway api
templates:
  - networking/gateway/gatewayclass.yaml
  - networking/gateway/gateway.yaml
  - networking/gateway/httproute.yaml
  - networking/gateway/tcproute.yaml
  - networking/gateway/referencegrant.yaml
tests:
  # GatewayClass tests
  - it: should not render GatewayClass by default
    template: networking/gateway/gatewayclass.yaml
    asserts:
      - hasDocuments:
          count: 0

  - it: should render GatewayClass when enabled
    template: networking/gateway/gatewayclass.yaml
    capabilities:
      apiVersions:
        - gateway.networking.k8s.io/v1/GatewayClass
    set:
      gateway.gatewayClass.enabled: true
      gateway.gatewayClass.controllerName: "example.com/gateway-controller"
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: GatewayClass
      - equal:
          path: metadata.name
          value: RELEASE-NAME-gateway-class
      - equal:
          path: spec.controllerName
          value: "example.com/gateway-controller"

  - it: should set custom GatewayClass name and description
    template: networking/gateway/gatewayclass.yaml
    capabilities:
      apiVersions:
        - gateway.networking.k8s.io/v1/GatewayClass
    set:
      gateway.gatewayClass.enabled: true
      gateway.gatewayClass.name: "custom-gateway-class"
      gateway.gatewayClass.controllerName: "custom.com/controller"
      gateway.gatewayClass.description: "Custom gateway class"
    asserts:
      - equal:
          path: metadata.name
          value: custom-gateway-class
      - equal:
          path: spec.description
          value: "Custom gateway class"

  - it: should create additional GatewayClasses
    template: networking/gateway/gatewayclass.yaml
    capabilities:
      apiVersions:
        - gateway.networking.k8s.io/v1/GatewayClass
    set:
      gateway.gatewayClass.enabled: true
      gateway.gatewayClass.controllerName: "main.com/controller"
      gateway.gatewayClass.additionalClasses:
        internal:
          enabled: true
          controllerName: "internal.com/controller"
          description: "Internal gateway class"
    asserts:
      - hasDocuments:
          count: 2
      - equal:
          path: metadata.name
          value: RELEASE-NAME-gateway-class
        documentIndex: 0
      - equal:
          path: metadata.name
          value: RELEASE-NAME-internal
        documentIndex: 1
      - equal:
          path: spec.controllerName
          value: "internal.com/controller"
        documentIndex: 1

  # Gateway tests
  - it: should not render Gateway by default
    template: networking/gateway/gateway.yaml
    asserts:
      - hasDocuments:
          count: 0

  - it: should render Gateway when enabled
    template: networking/gateway/gateway.yaml
    capabilities:
      apiVersions:
        - gateway.networking.k8s.io/v1/Gateway
    set:
      gateway.gateway.enabled: true
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: Gateway
      - equal:
          path: metadata.name
          value: RELEASE-NAME-gateway

  - it: should configure default HTTP listener
    template: networking/gateway/gateway.yaml
    capabilities:
      apiVersions:
        - gateway.networking.k8s.io/v1/Gateway
    set:
      gateway.gateway.enabled: true
    asserts:
      - equal:
          path: spec.listeners[0].name
          value: http
      - equal:
          path: spec.listeners[0].port
          value: 80
      - equal:
          path: spec.listeners[0].protocol
          value: HTTP

  - it: should configure HTTPS with TLS
    template: networking/gateway/gateway.yaml
    capabilities:
      apiVersions:
        - gateway.networking.k8s.io/v1/Gateway
    set:
      gateway.gateway.enabled: true
      gateway.gateway.tls.enabled: true
      gateway.gateway.tls.certificateRefs:
        - name: example-tls
          kind: Secret
    asserts:
      - lengthEqual:
          path: spec.listeners
          count: 2
      - equal:
          path: spec.listeners[1].name
          value: https
      - equal:
          path: spec.listeners[1].port
          value: 443
      - equal:
          path: spec.listeners[1].protocol
          value: HTTPS
      - equal:
          path: spec.listeners[1].tls.mode
          value: Terminate
      - equal:
          path: spec.listeners[1].tls.certificateRefs[0].name
          value: example-tls

  - it: should configure custom listeners
    template: networking/gateway/gateway.yaml
    capabilities:
      apiVersions:
        - gateway.networking.k8s.io/v1/Gateway
    set:
      gateway.gateway.enabled: true
      gateway.gateway.listeners:
        - name: custom-http
          port: 8080
          protocol: HTTP
          hostname: "*.example.com"
        - name: custom-https
          port: 8443
          protocol: HTTPS
          hostname: "api.example.com"
          tls:
            mode: Terminate
            certificateRefs:
              - name: api-tls
    asserts:
      - lengthEqual:
          path: spec.listeners
          count: 2
      - equal:
          path: spec.listeners[0].name
          value: custom-http
      - equal:
          path: spec.listeners[0].hostname
          value: "*.example.com"
      - equal:
          path: spec.listeners[1].tls.certificateRefs[0].name
          value: api-tls

  # HTTPRoute tests
  - it: should not render HTTPRoute by default
    template: networking/gateway/httproute.yaml
    asserts:
      - hasDocuments:
          count: 0

  - it: should render HTTPRoute when enabled
    template: networking/gateway/httproute.yaml
    capabilities:
      apiVersions:
        - gateway.networking.k8s.io/v1/HTTPRoute
    set:
      gateway.httpRoute.enabled: true
      service.ports:
        - name: http
          port: 80
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: HTTPRoute
      - equal:
          path: metadata.name
          value: RELEASE-NAME

  - it: should configure default parent reference
    template: networking/gateway/httproute.yaml
    capabilities:
      apiVersions:
        - gateway.networking.k8s.io/v1/HTTPRoute
    set:
      gateway.httpRoute.enabled: true
      service.ports:
        - name: http
          port: 80
    asserts:
      - equal:
          path: spec.parentRefs[0].name
          value: RELEASE-NAME-gateway

  - it: should configure custom parent references
    template: networking/gateway/httproute.yaml
    capabilities:
      apiVersions:
        - gateway.networking.k8s.io/v1/HTTPRoute
    set:
      gateway.httpRoute.enabled: true
      gateway.httpRoute.parentRefs:
        - name: custom-gateway
          namespace: gateway-system
          sectionName: https
          port: 443
      service.ports:
        - name: http
          port: 80
    asserts:
      - equal:
          path: spec.parentRefs[0].name
          value: custom-gateway
      - equal:
          path: spec.parentRefs[0].namespace
          value: gateway-system
      - equal:
          path: spec.parentRefs[0].sectionName
          value: https
      - equal:
          path: spec.parentRefs[0].port
          value: 443

  - it: should configure hostnames and rules
    template: networking/gateway/httproute.yaml
    capabilities:
      apiVersions:
        - gateway.networking.k8s.io/v1/HTTPRoute
    set:
      gateway.httpRoute.enabled: true
      gateway.httpRoute.hostnames:
        - "example.com"
        - "*.example.com"
      gateway.httpRoute.rules:
        - matches:
            - path:
                type: PathPrefix
                value: /api
              method: GET
          filters:
            - type: RequestHeaderModifier
              requestHeaderModifier:
                set:
                  - name: x-forwarded-proto
                    value: https
          backendRefs:
            - name: api-service
              port: 8080
              weight: 100
      service.ports:
        - name: http
          port: 80
    asserts:
      - equal:
          path: spec.hostnames
          value: ["example.com", "*.example.com"]
      - equal:
          path: spec.rules[0].matches[0].path.type
          value: PathPrefix
      - equal:
          path: spec.rules[0].matches[0].path.value
          value: /api
      - equal:
          path: spec.rules[0].matches[0].method
          value: GET
      - equal:
          path: spec.rules[0].filters[0].type
          value: RequestHeaderModifier
      - equal:
          path: spec.rules[0].backendRefs[0].name
          value: api-service
      - equal:
          path: spec.rules[0].backendRefs[0].weight
          value: 100

  - it: should create additional HTTPRoutes
    template: networking/gateway/httproute.yaml
    capabilities:
      apiVersions:
        - gateway.networking.k8s.io/v1/HTTPRoute
    set:
      gateway.httpRoute.enabled: true
      gateway.httpRoute.additionalRoutes:
        api:
          enabled: true
          hostnames:
            - api.example.com
          rules:
            - matches:
                - path:
                    type: PathPrefix
                    value: /v1
              backendRefs:
                - name: api-v1-service
                  port: 8080
      service.ports:
        - name: http
          port: 80
    asserts:
      - hasDocuments:
          count: 2
      - equal:
          path: metadata.name
          value: RELEASE-NAME-api
        documentIndex: 1
      - equal:
          path: spec.hostnames[0]
          value: api.example.com
        documentIndex: 1

  # TCPRoute tests
  - it: should not render TCPRoute by default
    template: networking/gateway/tcproute.yaml
    asserts:
      - hasDocuments:
          count: 0

  - it: should render TCPRoute when enabled
    template: networking/gateway/tcproute.yaml
    capabilities:
      apiVersions:
        - gateway.networking.k8s.io/v1alpha2/TCPRoute
    set:
      gateway.tcpRoute.enabled: true
      service.ports:
        - name: tcp
          port: 9000
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: TCPRoute
      - equal:
          path: metadata.name
          value: RELEASE-NAME-tcp

  - it: should configure default TCP backend
    template: networking/gateway/tcproute.yaml
    capabilities:
      apiVersions:
        - gateway.networking.k8s.io/v1alpha2/TCPRoute
    set:
      gateway.tcpRoute.enabled: true
      service.ports:
        - name: tcp
          port: 9000
    asserts:
      - equal:
          path: spec.rules[0].backendRefs[0].name
          value: RELEASE-NAME
      - equal:
          path: spec.rules[0].backendRefs[0].port
          value: 9000

  - it: should configure custom TCP rules
    template: networking/gateway/tcproute.yaml
    capabilities:
      apiVersions:
        - gateway.networking.k8s.io/v1alpha2/TCPRoute
    set:
      gateway.tcpRoute.enabled: true
      gateway.tcpRoute.rules:
        - backendRefs:
            - name: tcp-service
              port: 9000
              weight: 90
            - name: tcp-backup
              port: 9000
              weight: 10
      service.ports:
        - name: tcp
          port: 9000
    asserts:
      - equal:
          path: spec.rules[0].backendRefs[0].name
          value: tcp-service
      - equal:
          path: spec.rules[0].backendRefs[0].weight
          value: 90
      - equal:
          path: spec.rules[0].backendRefs[1].name
          value: tcp-backup

  - it: should create additional TCPRoutes
    template: networking/gateway/tcproute.yaml
    capabilities:
      apiVersions:
        - gateway.networking.k8s.io/v1alpha2/TCPRoute
    set:
      gateway.tcpRoute.enabled: true
      gateway.tcpRoute.additionalRoutes:
        database:
          enabled: true
          rules:
            - backendRefs:
                - name: postgres-primary
                  port: 5432
                  weight: 70
      service.ports:
        - name: tcp
          port: 9000
    asserts:
      - hasDocuments:
          count: 2
      - equal:
          path: metadata.name
          value: RELEASE-NAME-database-tcp
        documentIndex: 1
      - equal:
          path: spec.rules[0].backendRefs[0].name
          value: postgres-primary
        documentIndex: 1

  # ReferenceGrant tests
  - it: should not render ReferenceGrant by default
    template: networking/gateway/referencegrant.yaml
    asserts:
      - hasDocuments:
          count: 0

  - it: should render ReferenceGrant when enabled
    template: networking/gateway/referencegrant.yaml
    capabilities:
      apiVersions:
        - gateway.networking.k8s.io/v1beta1/ReferenceGrant
    set:
      gateway.referenceGrant.enabled: true
      gateway.referenceGrant.from:
        - group: gateway.networking.k8s.io
          kind: Gateway
          namespace: gateway-system
      gateway.referenceGrant.to:
        - group: ""
          kind: Service
          name: backend-service
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: ReferenceGrant
      - equal:
          path: spec.from[0].group
          value: gateway.networking.k8s.io
      - equal:
          path: spec.from[0].kind
          value: Gateway
      - equal:
          path: spec.from[0].namespace
          value: gateway-system
      - equal:
          path: spec.to[0].group
          value: ""
      - equal:
          path: spec.to[0].kind
          value: Service

  - it: should create additional ReferenceGrants
    template: networking/gateway/referencegrant.yaml
    capabilities:
      apiVersions:
        - gateway.networking.k8s.io/v1beta1/ReferenceGrant
    set:
      gateway.referenceGrant.enabled: true
      gateway.referenceGrant.from:
        - group: gateway.networking.k8s.io
          kind: HTTPRoute
      gateway.referenceGrant.to:
        - group: ""
          kind: Service
      gateway.referenceGrant.additionalGrants:
        secrets:
          enabled: true
          from:
            - group: gateway.networking.k8s.io
              kind: Gateway
              namespace: gateway-system
          to:
            - group: ""
              kind: Secret
    asserts:
      - hasDocuments:
          count: 2
      - equal:
          path: metadata.name
          value: RELEASE-NAME-secrets
        documentIndex: 1
