suite: test podmonitor
templates:
  - monitoring/prometheus/podmonitor.yaml
tests:
  - it: should not render by default
    asserts:
      - hasDocuments:
          count: 0

  - it: should render when enabled
    capabilities:
      apiVersions:
        - monitoring.coreos.com/v1/PodMonitor
    set:
      podMonitor.enabled: true
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: PodMonitor
      - equal:
          path: metadata.name
          value: RELEASE-NAME

  - it: should set custom labels and annotations
    capabilities:
      apiVersions:
        - monitoring.coreos.com/v1/PodMonitor
    set:
      podMonitor.enabled: true
      podMonitor.labels:
        prometheus: kube-prometheus
      podMonitor.annotations:
        custom: annotation
    asserts:
      - equal:
          path: metadata.labels.prometheus
          value: kube-prometheus
      - equal:
          path: metadata.annotations.custom
          value: annotation

  - it: should use default endpoint configuration
    capabilities:
      apiVersions:
        - monitoring.coreos.com/v1/PodMonitor
    set:
      podMonitor.enabled: true
      podMonitor.port: metrics
      podMonitor.path: /metrics
      podMonitor.interval: 30s
      podMonitor.scrapeTimeout: 10s
    asserts:
      - equal:
          path: spec.podMetricsEndpoints[0].port
          value: metrics
      - equal:
          path: spec.podMetricsEndpoints[0].path
          value: /metrics
      - equal:
          path: spec.podMetricsEndpoints[0].interval
          value: 30s
      - equal:
          path: spec.podMetricsEndpoints[0].scrapeTimeout
          value: 10s

  - it: should support multiple endpoints
    capabilities:
      apiVersions:
        - monitoring.coreos.com/v1/PodMonitor
    set:
      podMonitor.enabled: true
      podMonitor.endpoints:
        - port: metrics
          path: /metrics
          interval: 30s
        - port: admin
          path: /admin/metrics
          interval: 60s
    asserts:
      - equal:
          path: spec.podMetricsEndpoints[0].port
          value: metrics
      - equal:
          path: spec.podMetricsEndpoints[0].path
          value: /metrics
      - equal:
          path: spec.podMetricsEndpoints[1].port
          value: admin
      - equal:
          path: spec.podMetricsEndpoints[1].path
          value: /admin/metrics

  - it: should set advanced configuration
    capabilities:
      apiVersions:
        - monitoring.coreos.com/v1/PodMonitor
    set:
      podMonitor.enabled: true
      podMonitor.jobLabel: app.kubernetes.io/name
      podMonitor.targetLabels:
        - version
        - environment
      podMonitor.podTargetLabels:
        - pod-template-hash
      podMonitor.sampleLimit: 1000
      podMonitor.targetLimit: 10
    asserts:
      - equal:
          path: spec.jobLabel
          value: app.kubernetes.io/name
      - equal:
          path: spec.targetLabels
          value: ["version", "environment"]
      - equal:
          path: spec.podTargetLabels
          value: ["pod-template-hash"]
      - equal:
          path: spec.sampleLimit
          value: 1000
      - equal:
          path: spec.targetLimit
          value: 10

  - it: should set relabelings
    capabilities:
      apiVersions:
        - monitoring.coreos.com/v1/PodMonitor
    set:
      podMonitor.enabled: true
      podMonitor.relabelings:
        - sourceLabels: [__meta_kubernetes_pod_label_app]
          targetLabel: application
    asserts:
      - equal:
          path: spec.podMetricsEndpoints[0].relabelings[0].sourceLabels[0]
          value: __meta_kubernetes_pod_label_app
      - equal:
          path: spec.podMetricsEndpoints[0].relabelings[0].targetLabel
          value: application

  - it: should configure TLS
    capabilities:
      apiVersions:
        - monitoring.coreos.com/v1/PodMonitor
    set:
      podMonitor.enabled: true
      podMonitor.scheme: https
      podMonitor.tlsConfig:
        insecureSkipVerify: true
        ca:
          secret:
            name: ca-cert
            key: ca.crt
    asserts:
      - equal:
          path: spec.podMetricsEndpoints[0].scheme
          value: https
      - equal:
          path: spec.podMetricsEndpoints[0].tlsConfig.insecureSkipVerify
          value: true
      - equal:
          path: spec.podMetricsEndpoints[0].tlsConfig.ca.secret.name
          value: ca-cert

  - it: should configure authentication
    capabilities:
      apiVersions:
        - monitoring.coreos.com/v1/PodMonitor
    set:
      podMonitor.enabled: true
      podMonitor.endpoints:
        - port: metrics
          bearerTokenSecret:
            name: metrics-token
            key: token
        - port: admin
          basicAuth:
            username:
              name: metrics-auth
              key: username
            password:
              name: metrics-auth
              key: password
    asserts:
      - equal:
          path: spec.podMetricsEndpoints[0].bearerTokenSecret.name
          value: metrics-token
      - equal:
          path: spec.podMetricsEndpoints[1].basicAuth.username.name
          value: metrics-auth

  - it: should create additional monitors
    capabilities:
      apiVersions:
        - monitoring.coreos.com/v1/PodMonitor
    set:
      podMonitor.enabled: true
      podMonitor.additionalMonitors:
        sidecar:
          enabled: true
          selector:
            matchLabels:
              component: sidecar
          endpoints:
            - port: sidecar-metrics
              path: /metrics
    asserts:
      - hasDocuments:
          count: 2
      - equal:
          path: metadata.name
          value: RELEASE-NAME
        documentIndex: 0
      - equal:
          path: metadata.name
          value: RELEASE-NAME-sidecar
        documentIndex: 1
      - equal:
          path: spec.selector.matchLabels.component
          value: sidecar
        documentIndex: 1
