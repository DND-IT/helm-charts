suite: test statefulset
templates:
  - core/statefulset.yaml
tests:
  - it: should create statefulset when type is statefulset
    set:
      workload.type: statefulset
    asserts:
      - isKind:
          of: StatefulSet
      - equal:
          path: metadata.name
          value: RELEASE-NAME
      - equal:
          path: spec.serviceName
          value: RELEASE-NAME

  - it: should use custom service name
    set:
      workload.type: statefulset
      workload.serviceName: custom-service
    asserts:
      - equal:
          path: spec.serviceName
          value: custom-service

  - it: should set pod management policy
    set:
      workload.type: statefulset
      workload.podManagementPolicy: Parallel
    asserts:
      - equal:
          path: spec.podManagementPolicy
          value: Parallel

  - it: should add volume claim templates
    set:
      workload.type: statefulset
      workload.volumeClaimTemplates:
        data:
          size: 10Gi
          storageClass: fast-ssd
        logs:
          size: 5Gi
    asserts:
      - lengthEqual:
          path: spec.volumeClaimTemplates
          count: 2
      - equal:
          path: spec.volumeClaimTemplates[0].metadata.name
          value: data
      - equal:
          path: spec.volumeClaimTemplates[0].spec.resources.requests.storage
          value: 10Gi
      - equal:
          path: spec.volumeClaimTemplates[1].metadata.name
          value: logs

  - it: should use volume claim template from persistence section
    set:
      workload.type: statefulset
      persistence.enabled: true
      persistence.volumeClaimTemplate: true
      persistence.size: 20Gi
      persistence.storageClass: ssd
    asserts:
      - lengthEqual:
          path: spec.volumeClaimTemplates
          count: 1
      - equal:
          path: spec.volumeClaimTemplates[0].metadata.name
          value: data
      - equal:
          path: spec.volumeClaimTemplates[0].spec.resources.requests.storage
          value: 20Gi

  - it: should set update strategy
    set:
      workload.type: statefulset
      workload.updateStrategy:
        type: OnDelete
    asserts:
      - equal:
          path: spec.updateStrategy.type
          value: OnDelete

  - it: should set rolling update partition
    set:
      workload.type: statefulset
      workload.partition: 3
    asserts:
      - equal:
          path: spec.updateStrategy.rollingUpdate.partition
          value: 3

  - it: should not create statefulset for other workload types
    set:
      workload.type: deployment
    asserts:
      - hasDocuments:
          count: 0

  - it: should work with autoscaling disabled
    set:
      workload.type: statefulset
      autoscaling.enabled: false
      workload.replicas: 5
    asserts:
      - equal:
          path: spec.replicas
          value: 5

  - it: should support ordered ready pod management
    set:
      workload.type: statefulset
      workload.podManagementPolicy: OrderedReady
    asserts:
      - equal:
          path: spec.podManagementPolicy
          value: OrderedReady
