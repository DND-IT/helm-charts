global:
  role: KarpenterNodeRole-BasicCluster
  eksDiscovery:
    enabled: true
    clusterName: basic-cluster
    ownershipValue: "owned"
nodePools:
  default:
    enabled: true
    labels:
      environment: test
      team: basic
    annotations:
      environment: test
      team: basic
    taints:
      - key: "karpenter.sh/capacity-type"
        value: "spot"
        effect: "NoSchedule"
    startupTaints:
      - key: "karpenter.sh/capacity-type"
        value: "spot"
        effect: "NoSchedule"
    nodeClassRef:
      name: special
      group: karpenter.k8s.aws
      kind: EC2NodeClass
    metadataOptions:
    expireAfter: "666h"
    disruption:
      consolidationPolicy: "WhenEmptyOrUnderutilized"
      consolidateAfter: "5m"
      terminationGracePeriod: 48h
      budgets:
        - nodes: "20%"
          reasons:
            - "Empty"
            - "Drifted"
        - nodes: "5"
          reasons:
            - "Underutilized"
    limits:
      cpu: 10000
      memory: 4000Gi
    weight: 100
    requirements:
      - key: "karpenter.k8s.aws/instance-category"
        operator: In
        values: ["c", "m", "r"]
        # minValues here enforces the scheduler to consider at least that number of unique instance-category to schedule the pods.
        # This field is ALPHA and can be dropped or replaced at any time
        minValues: 2
      - key: "karpenter.k8s.aws/instance-family"
        operator: In
        values: ["m5", "m5d", "c5", "c5d", "c4", "r4"]
        minValues: 5
      - key: "karpenter.k8s.aws/instance-cpu"
        operator: In
        values: ["4", "8", "16", "32"]
      - key: "karpenter.k8s.aws/instance-hypervisor"
        operator: In
        values: ["nitro"]
      - key: "karpenter.k8s.aws/instance-generation"
        operator: Gt
        values: ["2"]
      - key: "topology.kubernetes.io/zone"
        operator: In
        values: ["us-west-2a", "us-west-2b"]
      - key: "kubernetes.io/arch"
        operator: In
        values: ["arm64", "amd64"]
      - key: "karpenter.sh/capacity-type"
        operator: In
        values: ["spot", "on-demand", "reserved"]

ec2NodeClasses:
  default:
    enabled: true
    tags:
      environment: test
      team: basic
    amiSelectorTerms:
      - id: ami-0123456789abcdef0
    capacityReservationSelectorTerms:
      - tags:
          environment: test
          team: basic
      - id: cr-1234567890abcdef0
    metadataOptions:
      httpPutResponseHopLimit: 2
    blockDeviceMappings:
      - deviceName: /dev/xvda
        ebs:
          volumeSize: 20Gi
          volumeType: gp3
    userData: |
      #!/bin/bash
      echo "Hello, world!"
  special:
    enabled: true
    tags:
      environment: test
      team: basic
    amiFamily: Bottlerocket
    amiSelectorTerms:
      - id: ami-0123456789abcdef0
    blockDeviceMappings:
      - deviceName: /dev/xvda
        ebs:
          volumeSize: 20Gi
          volumeType: gp3
