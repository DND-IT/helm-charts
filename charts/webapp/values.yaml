# Set replicas if scaling is not enabled
replicas: 1

# App specific configs
scale:
  enabled: true
  minReplicas: 1
  maxReplicas: 10
  minAvailable: 50%
  cpuThresholdPercentage: 100
  # -1 means "unset". Use positive integer to enable it.
  memoryThresholdPercentage: -1

# ["bundle", "exec", "rake", "db:create", "db:migrate"]
# command: []
command: []
# ["db:create", "db:migrate"]
args: []
env: {}
# Overwrites targetPort in the service
# port: 80

image_repo: nginx
image_tag: latest
image_pull_policy: IfNotPresent

probe:
  liveness: /
  livenessInitialDelaySeconds: 0
  livenessPeriodSeconds: 10
  livenessTimeoutSeconds: 2
  readiness: /
  readinessInitialDelaySeconds: 0
  readinessPeriodSeconds: 5
  readinessFailureThreshold: 2
  readinessTimeoutSeconds: 2
  startup:
  startupTimeoutSeconds: 1
  startupHttpHeaders:

service:
  # Enable the service
  enabled: true
  # Service name. If not set, the template will use the release name
  # name: ""
  # Annotations to be added to the service
  annotations: {}
  # Type of service to create
  type: ClusterIP
  # Port that the service is exposed on
  port: 80
  # Port that the target pod serves traffic on
  targetPort: 80
  # Name of the port that the service is exposed on
  portName: http

ingress:
  enabled: false
  className: ""
  annotations: {}
  hosts: []
  paths: ["/"]
  tls: false

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

metadata:
  deploymentAnnotations: {}
  podAnnotations: {}
  hpaAnnotations: {}
  labels:
    datadog:
      env: ""
      service: ""
      version: ""

topologySpreadConstraints:
  enabled: true
  # -- Enable pod [Topology Spread Constraints](https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/).
  maxSkew: 1
  # -- The key of node labels.
  # See https://kubernetes.io/docs/reference/kubernetes-api/labels-annotations-taints/
  # All the labels will be considered to try to find the best match
  topologyKeys:
    - topology.kubernetes.io/zone
    - kubernetes.io/hostname
  whenUnsatisfiable: ScheduleAnyway

update:
  maxUnavailable: 0%
  maxSurge: 25%

externalSecrets:
  refreshInterval: 5m
  clusterSecretStore: aws-secretsmanager
  # secret names that should be fetched and made available to the Pods
  secretNames: []

targetGroupBinding:
  enabled: false
  targetGroupARN: ""
  annotations: {}

aws_iam_role_arn: ""

initContainer:
  enabled: false
  name: ""
  image: ""
  image_tag: ""
  command: []
  args: []
